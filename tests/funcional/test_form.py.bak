from infocodest.accounts.forms import LoginForm, RegisterForm

def test_validate_success_register_form(test_client):
    # Ensure correct data validates.
    form = RegisterForm(username="juan", email="juan@gmail.com", password="example", confirm="example")
    assert form.validate() is True


def test_validate_invalid_password_format(test_client):
    # Ensure incorrect data does not validate.
    form = RegisterForm(username="new@test.com", email="new@test.com", password="example", confirm="")
    assert form.validate() is not True
    # self.assertFalse(form.validate())


def test_validate_email_already_registered(test_client):
    # Ensure user can't register when a duplicate email is used
    form = RegisterForm(
        username="juana", email="juan@gmail.com", password="example", confirm="example"
    )
    assert form.validate() is not True
    # self.assertFalse(form.validate())


def test_validate_success_login_form(test_client):
    # Ensure correct data validates.
    form = LoginForm(username="jdelat", password="admin_user")
    assert form.validate() is True
    # self.assertTrue(form.validate())


def test_validate_invalid_email_format(test_client):
    # Ensure invalid email format throws error.
    form = LoginForm(username="jdelat", password="example")
    assert form.validate() is not True
    # self.assertFalse(form.validate())
